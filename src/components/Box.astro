---
export interface Props {
  title: string;
  color: string;
  subtitle: string;
  openLink: string;
  demoLink?: string;
  analyticsLinkRef?: string;
}

const { title, subtitle, color, openLink, demoLink, analyticsLinkRef } =
  Astro.props as Props;

const textColor = color ? `text-${color}` : "text-neutral-800";
---

<details
  data-type="box"
  class="m-2 mb-6 rounded-md border bg-white p-2 drop-shadow-sm hover:border-gray-300 hover:drop-shadow-md lg:m-4 lg:p-4"
>
  <summary class="lg:list-none">
    <h1 class={`inline text-lg font-medium ${textColor} lg:text-2xl`}>
      {title}
    </h1>
    <h2 class="text-sm text-neutral-600 lg:text-xl">{subtitle}</h2>
    <a
      href={openLink}
      target="_blank"
      rel="noreferrer"
      class={`text-sm font-bold uppercase underline hover:decoration-4 text-${color}`}
      data-analytics={`OpenRegister${analyticsLinkRef}`}
    >
      Open register
    </a>
    {
      demoLink && (
        <>
          &#8212;
          <a
            href={demoLink}
            target="_blank"
            rel="noreferrer"
            class={`text-xs font-bold uppercase underline hover:decoration-4 text-${color}`}
            data-analytics={`OpenDemo${analyticsLinkRef}`}
          >
            Demo version
          </a>
        </>
      )
    }
  </summary>
  <div class="my-2 text-xs text-neutral-800 md:text-sm md:leading-6">
    <slot />
  </div>
</details>

<script>
  const toggleDetail = () => {
    const details = document.querySelectorAll('[data-type="box"]');
    details.forEach((el) => {
      if (window.innerWidth >= 1024) {
        el.setAttribute("open", "");
      }
    });
  };

  onresize = () => toggleDetail();
  onload = () => toggleDetail();
</script>
