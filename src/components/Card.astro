---
export interface Props {
	title: string;
	color: string;
	subtitle: string;
	openLink: string;
	demoLink?: string;
	analyticsLinkRef?: string;
}

const { title, subtitle, color, openLink, demoLink, analyticsLinkRef } = Astro.props as Props;

---

<details class="m-2 mb-6 p-2 bg-white shadow lg:m-4 lg:p-4 lg:w-1/3">
	<summary class="lg:list-none">
		<h1 class={`inline text-lg font-medium ${color} lg:text-2xl`}>
			{title}
		</h1>
		<h2 class="text-neutral-600 text-sm lg:text-xl">{subtitle}</h2>
		<a
			href={openLink}
			target="_blank"
			rel="noreferrer"
			class={`uppercase text-sm font-bold underline hover:decoration-4 ${color}`}
			data-analytics={`OpenRegister${analyticsLinkRef}`}
		>
			Open register
		</a>{
			demoLink && (
				<>&#8212;</> 
				<a
					href={demoLink}
					target="_blank"
					rel="noreferrer"
					class={`uppercase text-xs font-bold underline hover:decoration-4 ${color}`}
					data-analytics={`OpenDemo${analyticsLinkRef}`}
				>
					Demo version
				</a>
			)
		}
	</summary>
	<div class="my-2 text-neutral-800 text-xs lg:text-base leading-6">
		<slot />
	</div>
</details>

<script>
	const toggleDetail = () => {
		const details = document.querySelectorAll("details");
		details.forEach((el) => {
			if (window.innerWidth >= 1024) {
				el.setAttribute("open", "");
			} 
		})
	}
	
	onresize = () => toggleDetail()
	onload = () => toggleDetail()
</script>